name: Do Release

on:
  push:
    branches:
      - 'check-deploy'


jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
       - uses: actions/checkout@v3
       - name: Download Artifacts
         uses: actions/download-artifact@v3
       - name: Use Node.js
         uses: actions/setup-node@v3
         with:
           node-version: "18.x"
           registry-url: 'https://npm.pkg.github.com'
           cache: 'yarn'
       - name: Git Config
         run: |
           git config user.email "actions@github.com"
           git config user.name "GitHub Actions"
       - run: yarn install --immutable
       - run: yarn verify
       - run: yarn build
       - run: yarn npm publish
         env:
           NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           required by yarn
           YARN_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           YARN_NPM_REGISTRY_SERVER: "https://npm.pkg.github.com"
       - name: Git tag
         run: |
           CURRENT_PROJECT_VERSION=$(node -e "console.log(require('./package.json').version)")
           git commit -a -m "[skip ci] release $CURRENT_PROJECT_VERSION"
           git tag "$CURRENT_PROJECT_VERSION"
           git push origin "$CURRENT_PROJECT_VERSION"
           gh release create $CURRENT_PROJECT_VERSION

       - name: Move to next snapshot
         run: npm version --no-git-tag-version "$(node -e "console.log(require('semver').inc(require('./package.json').version, 'minor'))")"

       - name: Create Branch for next Snapshot Version
           run: |
             CURRENT_PROJECT_VERSION=$(node -e "console.log(require('./package.json').version)")
             BRANCH_NAME="move-to-$CURRENT_PROJECT_VERSION"
             git checkout -b "$BRANCH_NAME"
             git commit -a -m "[skip ci] change version to new snapshot $CURRENT_PROJECT_VERSION"
             git push origin "$BRANCH_NAME"
             gh pr create -B main -H $BRANCH_NAME --title "Update Version to $CURRENT_PROJECT_VERSION" --body 'Created by "Do Release" workflow'
             echo "Please, accept the PR: Update Version to $CURRENT_PROJECT_VERSION"
           env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
